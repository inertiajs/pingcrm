import{_ as m}from"./Logo.95a232e2.js";import{o as i,c as a,t as u,g as d,b as y,m as _,n as h,h as S}from"./app.6f127c70.js";let l;const b=new Uint8Array(16);function U(){if(!l&&(l=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!l))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return l(b)}const n=[];for(let e=0;e<256;++e)n.push((e+256).toString(16).slice(1));function v(e,t=0){return(n[e[t+0]]+n[e[t+1]]+n[e[t+2]]+n[e[t+3]]+"-"+n[e[t+4]]+n[e[t+5]]+"-"+n[e[t+6]]+n[e[t+7]]+"-"+n[e[t+8]]+n[e[t+9]]+"-"+n[e[t+10]]+n[e[t+11]]+n[e[t+12]]+n[e[t+13]]+n[e[t+14]]+n[e[t+15]]).toLowerCase()}const x=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),c={randomUUID:x};function V(e,t,o){if(c.randomUUID&&!t&&!e)return c.randomUUID();e=e||{};const r=e.random||(e.rng||U)();if(r[6]=r[6]&15|64,r[8]=r[8]&63|128,t){o=o||0;for(let s=0;s<16;++s)t[o+s]=r[s];return t}return v(r)}const $={inheritAttrs:!1,props:{id:{type:String,default(){return`text-input-${V()}`}},type:{type:String,default:"text"},error:String,label:String,modelValue:String},emits:["update:modelValue"],methods:{focus(){this.$refs.input.focus()},select(){this.$refs.input.select()},setSelectionRange(e,t){this.$refs.input.setSelectionRange(e,t)}}},I=["for"],D=["id","type","value"],R={key:1,class:"form-error"};function f(e,t,o,r,s,p){return i(),a("div",{class:h(e.$attrs.class)},[o.label?(i(),a("label",{key:0,class:"form-label",for:o.id},u(o.label)+":",9,I)):d("",!0),y("input",_({id:o.id,ref:"input"},{...e.$attrs,class:null},{class:["form-input",{error:o.error}],type:o.type,value:o.modelValue,onInput:t[0]||(t[0]=g=>e.$emit("update:modelValue",g.target.value))}),null,16,D),o.error?(i(),a("div",R,u(o.error),1)):d("",!0)],2)}const A=m($,[["render",f]]),k={props:{loading:Boolean}},B=["disabled"],w={key:0,class:"btn-spinner mr-2"};function C(e,t,o,r,s,p){return i(),a("button",{disabled:o.loading,class:"flex items-center"},[o.loading?(i(),a("div",w)):d("",!0),S(e.$slots,"default")],8,B)}const E=m(k,[["render",C]]);export{E as L,A as T,V as v};
